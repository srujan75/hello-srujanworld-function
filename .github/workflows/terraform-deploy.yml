name: Terraform Deploy

on:
  push:
    branches:
      - main  # Trigger this workflow on push to the 'main' branch
  pull_request:
    branches:
      - main  # Also trigger on pull requests targeting the 'main' branch

jobs:
  terraform:
    runs-on: ubuntu-latest  # Define the operating system for the workflow to run on
    environment: production # Optional: Define the environment name for deployment

    steps:
      # Checkout the repository to get the Terraform code
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Set up Terraform
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.4.0  # Specify the Terraform version

      # Configure Azure CLI (optional if deploying to Azure)
      - name: Set up Azure CLI
        uses: azure/setup-azure-cli@v1
        with:
          azure-cli-version: 2.39.0

      # Authenticate with Azure (using Service Principal or Managed Identity)
      - name: Authenticate with Azure
        run: |
          echo "${{ secrets.AZURE_CREDENTIALS }}" > az_credentials.json
          az login --service-principal -u $(cat az_credentials.json | jq -r '.clientId') -p $(cat az_credentials.json | jq -r '.clientSecret') --tenant $(cat az_credentials.json | jq -r '.tenantId')

      # Initialize Terraform (initialize the working directory)
      - name: Terraform Init
        run: terraform init

      # Plan the Terraform execution (preview the changes)
      - name: Terraform Plan
        run: terraform plan -out=tfplan

      # Apply the Terraform changes (deploy resources)
      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan

      # Clean up
      - name: Clean up Azure CLI session
        run: az logout
